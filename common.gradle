buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
    }
}

allprojects {
  apply plugin: 'com.bmuschko.docker-remote-api'
}

private void checkGcpProject() {
    if (!System.getenv().hasProperty("GCP_PROJECT")) {
        throw new GradleException("Please set GCP_PROJECT env var before continuing.")
    }
}

task buildDocker(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    dependsOn build
    inputDir = project.projectDir
    tag = "${project.name}:latest"
}

task tagDocker(type: Exec) {
    doFirst { checkGcpProject() }
    dependsOn buildDocker
    commandLine 'docker', 'tag', "${project.name}:latest", "gcr.io/${System.getenv().get("GCP_PROJECT")}/${project.name}:latest"
}

task pushDocker(type: Exec) {
    doFirst { checkGcpProject() }
    dependsOn tagDocker
    commandLine 'gcloud', 'docker', '--', 'push', "gcr.io/${System.getenv().get("GCP_PROJECT")}/${project.name}:latest"
}

task deploy(type: Exec) {
    commandLine 'k8s/deploy.sh'
}

task undeploy(type: Exec) {
    commandLine 'k8s/undeploy.sh'
}

